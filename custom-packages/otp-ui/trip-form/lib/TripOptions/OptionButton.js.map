{"version":3,"sources":["../../src/TripOptions/OptionButton.tsx"],"names":["OptionButton","checkboxIcons","checked","children","className","disabled","iconFillOverride","image","label","onClick","selected","GreenCheck","S","PlusIcon","unchecked","UncheckedIcon"],"mappings":";;;;;;;;;AAAA;;AACA;;;;;;AAOe,SAASA,YAAT,CAAsB;AACnCC,EAAAA,aADmC;AAEnCC,EAAAA,OAFmC;AAGnCC,EAAAA,QAHmC;AAInCC,EAAAA,SAJmC;AAKnCC,EAAAA,QALmC;AAMnCC,EAAAA,gBANmC;AAOnCC,EAAAA,KAPmC;AAQnCC,EAAAA,KARmC;AASnCC,EAAAA,OATmC;AAUnCC,EAAAA;AAVmC,CAAtB,EAoBsB;AACnC,QAAMC,UAAU,GAAG,CAAAV,aAAa,SAAb,IAAAA,aAAa,WAAb,YAAAA,aAAa,CAAEC,OAAf,KAA0BU,CAAC,CAACD,UAA/C;AACA,QAAME,QAAQ,GAAG,CAAAZ,aAAa,SAAb,IAAAA,aAAa,WAAb,YAAAA,aAAa,CAAEa,SAAf,KAA4BF,CAAC,CAACG,aAA/C;AAEA,sBACE,6BAAC,CAAD,CAAG,YAAH;AACE,IAAA,WAAW,EAAEL,QADf;AAEE,IAAA,SAAS,EAAEF,KAFb;AAGE,IAAA,SAAS,EAAEJ,SAHb;AAIE,IAAA,QAAQ,EAAEC,QAJZ;AAKE,IAAA,OAAO,EAAEI,OALX;AAME,IAAA,QAAQ,EAAEC;AANZ,kBAUE,6BAAC,CAAD,CAAG,WAAH;AAAe,IAAA,KAAK,EAAEH,KAAK,IAAK,aAAYC,KAAM,EAAlD;AAAqD,IAAA,gBAAgB,EAAEF,gBAAvE;AAAyF,IAAA,GAAG,EAAEE,KAA9F;AAAqG,IAAA,GAAG,EAAED;AAA1G,IAVF,eAWE,6BAAC,CAAD,CAAG,WAAH,QAAgBC,KAAhB,CAXF,eAYE,6BAAC,CAAD,CAAG,UAAH,QACGN,OAAO,gBAAG,6BAAC,UAAD,OAAH,gBAAoB,6BAAC,QAAD,OAD9B,CAZF,EAeGC,QAfH,CADF;AAmBD","sourcesContent":["import React from \"react\";\nimport * as S from \"./styled\";\n\n// Prettier does not accept typescript in this file\n// eslint-disable-next-line prettier/prettier\nimport type { ButtonProps } from \"./Checkbox\"\nimport { CheckboxIcons } from \"./types\";\n\nexport default function OptionButton({\n  checkboxIcons,\n  checked,\n  children,\n  className,\n  disabled,\n  iconFillOverride,\n  image,\n  label,\n  onClick,\n  selected\n}: {\n  checkboxIcons?: CheckboxIcons;\n  checked: boolean;\n  children?: React.ReactNode | string;\n  className?: string;\n  disabled?: boolean;\n  iconFillOverride?: string;\n  image?: string;\n  label: string;\n} & ButtonProps): React.ReactElement {\n  const GreenCheck = checkboxIcons?.checked || S.GreenCheck;\n  const PlusIcon = checkboxIcons?.unchecked || S.UncheckedIcon;\n\n  return (\n    <S.OptionButton\n      ariaChecked={selected}\n      ariaLabel={label}\n      className={className}\n      disabled={disabled}\n      onClick={onClick}\n      selected={selected}\n    >\n      {/* This means the image tag is present even if there is no icon, but this \n      allows spacing to be even when there are options with and without icons */}\n      <S.OptionImage title={image && `image for ${label}`} iconFillOverride={iconFillOverride} key={label} src={image} />\n      <S.OptionLabel>{label}</S.OptionLabel>\n      <S.OptionIcon>\n        {checked ? <GreenCheck /> : <PlusIcon />}\n      </S.OptionIcon>\n      {children}\n    </S.OptionButton>\n  );\n}\n"],"file":"OptionButton.js"}