{"version":3,"sources":["../../src/CheckboxSelector/index.tsx"],"names":["CheckboxSelector","className","label","name","onChange","style","value","handleChange","evt","target","checked","id","finalValue"],"mappings":";;;;;;;AACA;;AAEA;;;;;;AAgCA;AACA;AACA;AACe,SAASA,gBAAT,CAA0B;AACvCC,EAAAA,SAAS,GAAG,IAD2B;AAEvCC,EAAAA,KAAK,GAAG,IAF+B;AAGvCC,EAAAA,IAAI,GAAG,IAHgC;AAIvCC,EAAAA,QAAQ,GAAG,IAJ4B;AAKvCC,EAAAA,KALuC;AAMvCC,EAAAA,KAAK,GAAG;AAN+B,CAA1B,EAOyB;AACtC,QAAMC,YAAY,GAAG,wBAClBC,GAAD,IAAwC;AACtC,QAAI,OAAOJ,QAAP,KAAoB,UAAxB,EAAoC;AAClCA,MAAAA,QAAQ,CAAC;AACP,SAACD,IAAD,GAAQK,GAAG,CAACC,MAAJ,CAAWC;AADZ,OAAD,CAAR;AAGD;AACF,GAPkB,EAQnB,CAACN,QAAD,CARmB,CAArB;AAWA,QAAMO,EAAE,GAAI,kBAAiBR,IAAK,EAAlC;AACA,QAAMS,UAAU,GAAG,OAAON,KAAP,KAAiB,QAAjB,GAA4BA,KAAK,KAAK,MAAtC,GAA+CA,KAAlE;AAEA,sBACE;AAAK,IAAA,SAAS,EAAEL,SAAhB;AAA2B,IAAA,KAAK,EAAEI;AAAlC,kBACE;AACE,IAAA,EAAE,EAAEM,EADN;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,IAAA,OAAO,EAAEC,UAHX;AAIE,IAAA,QAAQ,EAAEL;AAJZ,IADF,eAOE,6BAAC,CAAD,CAAG,YAAH;AAAgB,IAAA,OAAO,EAAEI;AAAzB,KAA8BT,KAA9B,CAPF,CADF;AAWD","sourcesContent":["import CSS from \"csstype\";\nimport React, { ChangeEvent, ReactElement, useCallback } from \"react\";\n\nimport * as S from \"../styled\";\n\n// eslint-disable-next-line prettier/prettier\nimport type { QueryParamChangeEvent } from \"../types\";\n\ninterface CheckboxSelectorProps {\n  /**\n   * The CSS class name(s) to apply to this element.\n   */\n  className?: string;\n  /**\n   * The contents of the contained <label> control.\n   */\n  label?: ReactElement | string;\n  /**\n   * A unique name for the setting.\n   */\n  name?: string;\n  /**\n   * Triggered when the value of the <input> control changes.\n   */\n  onChange?: (evt: QueryParamChangeEvent) => void;\n  /**\n   * Standard React inline style prop.\n   */\n  style?: CSS.Properties;\n  /**\n   * The initial value for the contained <input> control.\n   */\n  value?: string | boolean;\n}\n\n/**\n * A wrapper that includes an <input type=\"select\" /> control and a <label> for the input control.\n */\nexport default function CheckboxSelector({\n  className = null,\n  label = null,\n  name = null,\n  onChange = null,\n  style,\n  value = null\n}: CheckboxSelectorProps): ReactElement {\n  const handleChange = useCallback(\n    (evt: ChangeEvent<HTMLInputElement>) => {\n      if (typeof onChange === \"function\") {\n        onChange({\n          [name]: evt.target.checked\n        });\n      }\n    },\n    [onChange]\n  );\n\n  const id = `id-query-param-${name}`;\n  const finalValue = typeof value === \"string\" ? value === \"true\" : value;\n\n  return (\n    <div className={className} style={style}>\n      <input\n        id={id}\n        type=\"checkbox\"\n        checked={finalValue}\n        onChange={handleChange}\n      />\n      <S.SettingLabel htmlFor={id}>{label}</S.SettingLabel>\n    </div>\n  );\n}\n"],"file":"index.js"}