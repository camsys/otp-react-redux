{"version":3,"sources":["../../src/SubmodeSelector/index.tsx"],"names":["SubmodeSelector","className","inline","label","modes","onChange","style","LabelType","S","FloatingSettingLabel","SettingLabel","RowType","InlineRow","Row","map","option","id","selected","title","text"],"mappings":";;;;;;;;;AACA;;AAEA;;AACA;;;;;;AAiCA;AACA;AACA;AACA;AACe,SAASA,eAAT,CAAyB;AACtCC,EAAAA,SAAS,GAAG,IAD0B;AAEtCC,EAAAA,MAAM,GAAG,KAF6B;AAGtCC,EAAAA,KAAK,GAAG,IAH8B;AAItCC,EAAAA,KAAK,GAAG,IAJ8B;AAKtCC,EAAAA,QAAQ,GAAG,IAL2B;AAMtCC,EAAAA,KAAK,GAAG;AAN8B,CAAzB,EAOwB;AACrC,QAAMC,SAAS,GAAGL,MAAM,GAAGM,CAAC,CAACC,oBAAL,GAA4BD,CAAC,CAACE,YAAtD;AACA,QAAMC,OAAO,GAAGT,MAAM,GAClBM,CAAC,CAACR,eAAF,CAAkBY,SADA,GAElBJ,CAAC,CAACR,eAAF,CAAkBa,GAFtB;AAIA,sBACE,6BAAC,CAAD,CAAG,eAAH;AAAmB,IAAA,SAAS,EAAEZ,SAA9B;AAAyC,IAAA,KAAK,EAAEK;AAAhD,KACGH,KAAK,iBAAI,6BAAC,SAAD,QAAYA,KAAZ,CADZ,eAEE,6BAAC,OAAD,QACGC,KAAK,IACJA,KAAK,CAACU,GAAN,CAAUC,MAAM,iBACd,6BAAC,mBAAD;AACE,IAAA,GAAG,EAAEA,MAAM,CAACC,EADd;AAEE,IAAA,QAAQ,EAAED,MAAM,CAACE,QAFnB;AAGE,IAAA,SAAS,EAAE,KAHb;AAIE,IAAA,KAAK,EAAEF,MAAM,CAACG,KAJhB;AAKE,IAAA,OAAO,EAAE,MAAMb,QAAQ,CAACU,MAAM,CAACC,EAAR;AALzB,KAOGD,MAAM,CAACI,IAPV,CADF,CAFJ,CAFF,CADF;AAmBD","sourcesContent":["import CSS from \"csstype\";\nimport React, { ReactElement, ReactNode } from \"react\";\n\nimport ModeButton from \"../ModeButton\";\nimport * as S from \"../styled\";\n\n// eslint-disable-next-line prettier/prettier\nimport type { ModeSelectorOption } from \"../types\";\n\ninterface SubmodeSelectorProps {\n  /**\n   * The CSS class name to apply to this element.\n   */\n  className?: string;\n  /**\n   * Determines how the label and mode buttons are displayed.\n   */\n  inline?: boolean;\n  /**\n   * The optional text to display before the submodes.\n   */\n  label?: ReactNode;\n  /**\n   * An array of submodes for the trip query, i.e. transit modes, TNC, or rental companies.\n   */\n  modes?: ModeSelectorOption[];\n  /**\n   * Triggered when the user toggles a submode.\n   * @param id The id of the option clicked.\n   */\n  onChange: (id: string) => void;\n  /**\n   * Standard React inline style prop.\n   */\n  style?: CSS.Properties;\n}\n\n/**\n * SubmodeSelector is the control container where the OTP user selects\n * the submodes (e.g. train, bus) for transit, or the providers for TNC and rental companies.\n */\nexport default function SubmodeSelector({\n  className = null,\n  inline = false,\n  label = null,\n  modes = null,\n  onChange = null,\n  style = null\n}: SubmodeSelectorProps): ReactElement {\n  const LabelType = inline ? S.FloatingSettingLabel : S.SettingLabel;\n  const RowType = inline\n    ? S.SubmodeSelector.InlineRow\n    : S.SubmodeSelector.Row;\n\n  return (\n    <S.SubmodeSelector className={className} style={style}>\n      {label && <LabelType>{label}</LabelType>}\n      <RowType>\n        {modes &&\n          modes.map(option => (\n            <ModeButton\n              key={option.id}\n              selected={option.selected}\n              showTitle={false}\n              title={option.title}\n              onClick={() => onChange(option.id)}\n            >\n              {option.text}\n            </ModeButton>\n          ))}\n      </RowType>\n    </S.SubmodeSelector>\n  );\n}\n"],"file":"index.js"}