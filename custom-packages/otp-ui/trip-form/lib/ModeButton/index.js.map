{"version":3,"sources":["../../src/ModeButton/index.tsx"],"names":["ModeButton","className","children","enabled","onClick","selected","showTitle","title","style","activeClassName","disabledClassName"],"mappings":";;;;;;;;;AACA;;AAEA;;;;;;AAsCA;AACA;AACA;AACA;AACA;AACA;AACe,SAASA,UAAT,CAAoB;AACjCC,EAAAA,SAAS,GAAG,IADqB;AAEjCC,EAAAA,QAAQ,GAAG,IAFsB;AAGjCC,EAAAA,OAAO,GAAG,IAHuB;AAIjCC,EAAAA,OAAO,GAAG,IAJuB;AAKjCC,EAAAA,QAAQ,GAAG,KALsB;AAMjCC,EAAAA,SAAS,GAAG,IANqB;AAOjCC,EAAAA,KAAK,GAAG,IAPyB;AAQjCC,EAAAA,KAAK,GAAG;AARyB,CAApB,EASmB;AAChC,QAAMC,eAAe,GAAGJ,QAAQ,GAAG,QAAH,GAAc,EAA9C;AACA,QAAMK,iBAAiB,GAAGP,OAAO,GAAG,EAAH,GAAQ,UAAzC;AAEA,sBACE,6BAAC,CAAD,CAAG,UAAH;AAAc,IAAA,SAAS,EAAEF,SAAzB;AAAoC,IAAA,KAAK,EAAEO;AAA3C,kBACE,6BAAC,CAAD,CAAG,UAAH,CAAc,MAAd;AACE,oBAAcH,QADhB;AAEE,IAAA,SAAS,EAAG,GAAEI,eAAgB,IAAGC,iBAAkB,EAFrD;AAGE,IAAA,QAAQ,EAAE,CAACP,OAHb;AAIE,IAAA,OAAO,EAAEC,OAJX;AAKE,IAAA,KAAK,EAAEG;AALT,KAOGL,QAPH,CADF,EAWGK,KAAK,IAAID,SAAT,iBACC,6BAAC,CAAD,CAAG,UAAH,CAAc,KAAd;AACE,IAAA,SAAS,EAAG,GAAEG,eAAgB,IAAGC,iBAAkB,EADrD;AAEE,IAAA,KAAK,EAAEH;AAFT,KAIGA,KAJH,CAZJ,CADF;AAsBD","sourcesContent":["import CSS from \"csstype\";\nimport React, { ReactElement, ReactNode } from \"react\";\n\nimport * as S from \"../styled\";\n\ninterface ModeButtonProps {\n  /**\n   * The contents of the button. Can be any HTML/React content.\n   */\n  children: ReactNode;\n  /**\n   * The CSS class name to apply to this element.\n   */\n  className?: string;\n  /**\n   * Determines whether the button is currently enabled.\n   */\n  enabled?: boolean;\n  /**\n   * Triggered when the user clicks the button.\n   */\n  onClick?: (InputEvent) => void;\n  /**\n   * Determines whether the button should appear selected.\n   */\n  selected?: boolean;\n  /**\n   * Determines whether the title should be displayed (underneath the button).\n   */\n  showTitle?: boolean;\n  /**\n   * A title text for the button, displayed as popup when the user hover the mouse over the button,\n   * and optionally displayed underneath the button if showTitle is true.\n   */\n  title?: string;\n  /**\n   * Standard React inline style prop.\n   */\n  style?: CSS.Properties;\n}\n\n/**\n * ModeButton lets the user pick a travel mode.\n * It includes the actual button that supports HTML/React text and graphics,\n * and a title displayed when hovering the mouse over the button, and, optionally, underneath it.\n * A ModeButton can be enabled or disabled, active or inactive.\n */\nexport default function ModeButton({\n  className = null,\n  children = null,\n  enabled = true,\n  onClick = null,\n  selected = false,\n  showTitle = true,\n  title = null,\n  style = null\n}: ModeButtonProps): ReactElement {\n  const activeClassName = selected ? \"active\" : \"\";\n  const disabledClassName = enabled ? \"\" : \"disabled\";\n\n  return (\n    <S.ModeButton className={className} style={style}>\n      <S.ModeButton.Button\n        aria-pressed={selected}\n        className={`${activeClassName} ${disabledClassName}`}\n        disabled={!enabled}\n        onClick={onClick}\n        title={title}\n      >\n        {children}\n      </S.ModeButton.Button>\n\n      {title && showTitle && (\n        <S.ModeButton.Title\n          className={`${activeClassName} ${disabledClassName}`}\n          title={title}\n        >\n          {title}\n        </S.ModeButton.Title>\n      )}\n    </S.ModeButton>\n  );\n}\n"],"file":"index.js"}